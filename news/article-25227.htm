<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://nodeclashv2ray.github.io/news/article-25227.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>springboot+jpa 实现不同数据库的多数据源配置</title>
        <meta name="description" content="废话不多说，直接看配置！ 1、application.yml # 多数据源配置 #primary spring:   primary:     datasource:       url: jdbc:" />
        <link rel="icon" href="/assets/website/img/nodeclashv2ray/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <!-- Place favicon.ico in the root directory -->
    <!-- All css files are included here. -->
    <!-- Bootstrap fremwork main css -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/bootstrap.min.css">
    <!-- This core.css file contents all plugings css file. -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/core.css">
    <!-- Theme shortcodes/elements style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/shortcode/shortcodes.css">
    <!-- Theme main style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/style.css">
    <!-- Responsive css -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/responsive.css">
    <!-- Style customizer (Remove these two lines please) -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/style-customizer.css">
    <!-- User style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/custom.css">
    <!-- Modernizr JS -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BKWDB6T1Z4"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BKWDB6T1Z4');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lt IE 8]>
        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <!-- Body main wrapper start -->
    <div class="wrapper">
        <!-- Start of Header Top Area -->
        <header id="header-content">
            <!-- Start of mainmenu area -->
            <div id="sticky-header-with-topbar" class="header-bottom-area bg-white height-100  transparent-header hidden-xs">
                <div class="container">
                    <div class="row">
                        <div class="col-md-5 col-sm-12">
                            <div class="logo f-left sm-center">
                                                                <a href="/">Node Clash V2ray</a>
                                                            </div>
                        </div>
                        <div class="col-md-7 col-sm-12">
                            <div class="mainmenu-container">
                                <ul class="main-menu">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Mobile-menu-area start -->
            <div class="mobile-menu-area hidden-md hidden-lg hidden-sm">
                <div class="fluid-container mobile-menu-container">
                    <div class="mobile-logo">
                                                <a href="/">Node Clash V2ray</a>
                                            </div>
                    <div class="mobile-menu clearfix">
                        <nav id="mobile_dropdown">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
            <!-- Mobile-menu-area end -->
        </header>
<!-- End of Header Top Area -->
        <!-- Start Bradcaump area -->
        <div class="tf-bradcaump-area sbg-3" data-black-overlay="8">
            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="bradcaump-wrap text-center">
                            <h1 class="bradcaump-title">springboot+jpa 实现不同数据库的多数据源配置</h1>
                            <nav class="bradcaump-inner">
                                <a class="breadcrumb-item" href="/">首页</a>
                                <span class="brd-separetor">/</span>
                                <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                                <span class="brd-separetor">/</span>
                                <span class="breadcrumb-item active">正文</span>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Bradcaump area -->
        <section id="tf-about-container" class="tf-about-area ptb-100 bg-gray xtb-60">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="content_views" class="htmledit_views"> <p style="text-indent:50px;">废话不多说，直接看配置！</p> <p style="text-indent:50px;">1、application.yml</p> <pre class="has"><code class="language-java"># 多数据源配置 #primary spring:   primary:     datasource:       url: jdbc:mysql://xxx.xxx.xxx.xxx:3306/dico_dev?autoReconnect=true&amp;autoReconnectForPools=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=true       username: root       password: xxxx       driver-class-name: com.mysql.jdbc.Driver  #secondary   secondary:     datasource:       url: jdbc:sqlserver://xxx.xxx.xxxx.xxx:1433;databasename=LZMISportal       username: root       password: xxxx       driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver    jpa:     hibernate:       primary-dialect: org.hibernate.dialect.MySQL5Dialect       secondary-dialect: org.hibernate.dialect.SQLServer2008Dialect     open-in-view: true     show-sql: true</code></pre> <p style="text-indent:50px;">配置文件如上，分别定义两个数据库的链接和数据库对应的方言。</p> <p style="text-indent:50px;">2、配置数据源</p> <pre class="has"><code class="language-java">@Configuration public class DataSourceConfig {       @Bean(name = "primaryDataSource")     @Primary     @Qualifier("primaryDataSource")     @ConfigurationProperties(prefix = "spring.primary.datasource")     public DataSource primaryDatasource() {         return DataSourceBuilder.create().build();     }      @Bean(name = "secondaryDataSource")     @Qualifier("secondaryDataSource")     @ConfigurationProperties(prefix = "spring.secondary.datasource")     public DataSource secondaryDataSource() {         return DataSourceBuilder.create().build();     }  }</code></pre> <p style="text-indent:50px;">代码解析：1、两个数据源分别对应yml文件中配置的数据源 2、使用@Bean注解将对应方法发布以供后边使用</p> <p style="text-indent:50px;">3、定义不同数据源的作用域</p> <p style="text-indent:50px;">多数据源配置 1）</p> <pre class="has"><code class="language-java">@Configuration @EnableTransactionManagement @EnableJpaRepositories(         entityManagerFactoryRef = "entityManagerFactoryPrimary",//配置连接工厂 entityManagerFactory         transactionManagerRef = "transactionManagerPrimary", //配置 事物管理器  transactionManager         basePackages = {"xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx"}//设置持久层所在位置 ) public class PrimaryConfig {      @Autowired     private JpaProperties jpaProperties;      @Autowired     @Qualifier("primaryDataSource")     private DataSource primaryDataSource;// 自动注入配置好的数据源          @Value("${spring.jpa.hibernate.primary-dialect}")     private String primaryDialect;// 获取对应的数据库方言       /**      *      * @param builder      * @return      */     @Bean(name = "entityManagerFactoryPrimary")     @Primary     public LocalContainerEntityManagerFactoryBean entityManagerFactoryPrimary(EntityManagerFactoryBuilder builder) {          return builder                 //设置数据源                 .dataSource(primaryDataSource)                 //设置数据源属性                 .properties(getVendorProperties(primaryDataSource))                 //设置实体类所在位置.扫描所有带有 @Entity 注解的类                 .packages("xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx","xxx.xxx.xxx.xxx")                 // Spring会将EntityManagerFactory注入到Repository之中.有了 EntityManagerFactory之后,                 // Repository就能用它来创建 EntityManager 了,然后 EntityManager 就可以针对数据库执行操作                 .persistenceUnit("primaryPersistenceUnit")                 .build();      }      private Map&lt;String, String&gt; getVendorProperties(DataSource dataSource) {         Map&lt;String,String&gt; map = new HashMap&lt;&gt;();         map.put("hibernate.dialect",primaryDialect);// 设置对应的数据库方言         jpaProperties.setProperties(map);         return jpaProperties.getHibernateProperties(dataSource);     }      /**      * 配置事物管理器      *      * @param builder      * @return      */     @Bean(name = "transactionManagerPrimary")     @Primary     PlatformTransactionManager transactionManagerPrimary(EntityManagerFactoryBuilder builder) {         return new JpaTransactionManager(entityManagerFactoryPrimary(builder).getObject());     }   }</code></pre> <p style="text-indent:50px;">多数据源配置 2）</p> <pre class="has"><code class="language-java">@Configuration @EnableTransactionManagement @EnableJpaRepositories(         entityManagerFactoryRef="entityManagerFactorySecondary",         transactionManagerRef="transactionManagerSecondary",         basePackages= { "xxx.xxx.xxx.xxx" }) public class SecondaryConfig {      @Autowired     private JpaProperties jpaProperties;      @Autowired     @Qualifier("secondaryDataSource")     private DataSource secondaryDataSource;          @Value("${spring.jpa.hibernate.secondary-dialect}")     private String secondaryDialect;        @Bean(name = "entityManagerSecondary")     public EntityManager entityManager(EntityManagerFactoryBuilder builder) {         return entityManagerFactorySecondary(builder).getObject().createEntityManager();     }      @Bean(name = "entityManagerFactorySecondary")     public LocalContainerEntityManagerFactoryBean entityManagerFactorySecondary (EntityManagerFactoryBuilder builder) {         return builder                 .dataSource(secondaryDataSource)                 .properties(getVendorProperties(secondaryDataSource))                 .packages("xxx.xxx.xxx.xxx")                 .persistenceUnit("secondaryPersistenceUnit")                 .build();     }      private Map&lt;String, String&gt; getVendorProperties(DataSource dataSource) {         Map&lt;String,String&gt; map = new HashMap&lt;&gt;();         map.put("hibernate.dialect",secondaryDialect);         jpaProperties.setProperties(map);         return jpaProperties.getHibernateProperties(dataSource);     }      @Bean(name = "transactionManagerSecondary")     PlatformTransactionManager transactionManagerSecondary(EntityManagerFactoryBuilder builder) {         return new JpaTransactionManager(entityManagerFactorySecondary(builder).getObject());     }   }</code></pre> <p style="text-indent:50px;">至此，所有配置已完成，配置扫描到的所有@Entity类将被对应到不同的数据库中。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-24764.htm">动物打疫苗打几次 动物打疫苗打几次有效</a></p>
                                        <p>下一个：<a href="/news/article-25229.htm">动物疫苗在常温下能放多久呢视频讲解（动物疫苗运输与储存规范）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">热门文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                                    <li class="py-2"><a href="/free-nodes/2024-5-8-clash-v2ray-ss-ssr.htm" title="5月8日|最高速度22.5M/S，2024最新Shadowrocket/Clash/SSR/V2ray免费节点高速订阅链接">5月8日|最高速度22.5M/S，2024最新Shadowrocket/Clash/SSR/V2ray免费节点高速订阅链接</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
                <!-- Start of Footer Area -->
        <footer id="footer" class="footer-area footer-bg">
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="copy-right-text">
                                NodeClashV2ray节点订阅站 版权所有 Powered by WordPress
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--End of Footer Area -->
    </div>
    <!-- Body main wrapper end -->
    <!-- Placed js at the end of the document so the pages load faster -->
    <!-- jquery latest version -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/vendor/jquery-1.12.0.min.js"></script>
    <!-- Bootstrap framework js -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/bootstrap.min.js"></script>
    <!-- Owl Carousel framework js -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/owl.carousel.min.js"></script>
    <!-- All js plugins included in this file. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/plugins.js"></script>
    <!-- Slick min.js. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/slick.min.js"></script>
    <!-- Waypoints.min.js. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/waypoints.min.js"></script>
    <!-- Main js file that contents all jQuery plugins activation. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>