<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nodeclashv2ray.github.io/news/article-38539.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>【Spring】spring的反射机制详解</title>
        <meta name="description" content="一、什么是反射： （1）Java反射机制的核心是在程序运行时动态加载类并获取类的详细信息，从而操作类或对象的属性和方法。本质是JVM得到class对象之后，再通过class对象进行反编译，从而获取对象" />
        <link rel="icon" href="/assets/website/img/nodeclashv2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="NodeClashV2ray节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nodeclashv2ray.github.io/news/article-38539.htm" />
    <meta property="og:site_name" content="NodeClashV2ray节点订阅站" />
    <meta property="og:title" content="【Spring】spring的反射机制详解" />
    <meta property="og:image" content="https://nodeclashv2ray.github.io/uploads/20240509/4538de14e781806ba7bc4d07386a8190.webp" />
        <meta property="og:release_date" content="2025-01-10T10:43:41" />
    <meta property="og:updated_time" content="2025-01-10T10:43:41" />
        <meta property="og:description" content="一、什么是反射： （1）Java反射机制的核心是在程序运行时动态加载类并获取类的详细信息，从而操作类或对象的属性和方法。本质是JVM得到class对象之后，再通过class对象进行反编译，从而获取对象" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <!-- Place favicon.ico in the root directory -->
    <!-- All css files are included here. -->

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【Spring】spring的反射机制详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap fremwork main css -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/bootstrap.min.css">
    <!-- This core.css file contents all plugings css file. -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/core.css">
    <!-- Theme shortcodes/elements style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/shortcode/shortcodes.css">
    <!-- Theme main style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/style.css">
    <!-- Responsive css -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/responsive.css">
    <!-- Style customizer (Remove these two lines please) -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/style-customizer.css">
    <!-- User style -->
    <link rel="stylesheet" href="/assets/website/css/nodeclashv2ray/custom.css">
    <!-- Modernizr JS -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BKWDB6T1Z4"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BKWDB6T1Z4');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lt IE 8]>
        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <!-- Body main wrapper start -->
    <div class="wrapper">
        <!-- Start of Header Top Area -->
        <header id="header-content">
            <!-- Start of mainmenu area -->
            <div id="sticky-header-with-topbar" class="header-bottom-area bg-white height-100  transparent-header hidden-xs">
                <div class="container">
                    <div class="row">
                        <div class="col-md-5 col-sm-12">
                            <div class="logo f-left sm-center">
                                                                <a href="/">Node Clash V2ray</a>
                                                            </div>
                        </div>
                        <div class="col-md-7 col-sm-12">
                            <div class="mainmenu-container">
                                <ul class="main-menu">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Mobile-menu-area start -->
            <div class="mobile-menu-area hidden-md hidden-lg hidden-sm">
                <div class="fluid-container mobile-menu-container">
                    <div class="mobile-logo">
                                                <a href="/">Node Clash V2ray</a>
                                            </div>
                    <div class="mobile-menu clearfix">
                        <nav id="mobile_dropdown">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
            <!-- Mobile-menu-area end -->
        </header>
<!-- End of Header Top Area -->
        <!-- Start Bradcaump area -->
        <div class="tf-bradcaump-area sbg-3" data-black-overlay="8">
            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="bradcaump-wrap text-center">
                            <h1 class="bradcaump-title">【Spring】spring的反射机制详解</h1>
                            <nav class="bradcaump-inner">
                                <a class="breadcrumb-item" href="/">首页</a>
                                <span class="brd-separetor">/</span>
                                <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                                <span class="brd-separetor">/</span>
                                <span class="breadcrumb-item active">正文</span>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Bradcaump area -->
        <section id="tf-about-container" class="tf-about-area ptb-100 bg-gray xtb-60">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>一、什么是反射：<br /> （1）Java反射机制的核心是在程序运行时动态加载类并获取类的详细信息，从而操作类或对象的属性和方法。本质是JVM得到class对象之后，再通过class对象进行反编译，从而获取对象的各种信息。</p> <p>（2）Java属于先编译再运行的语言，程序中对象的类型在编译期就确定下来了，而当程序在运行时可能需要动态加载某些类，这些类因为之前用不到，所以没有被加载到JVM。通过反射，可以在运行时动态地创建对象并调用其属性，不需要提前在编译期知道运行的对象是谁。</p> <p>二、反射的原理：<br /> 下图是类的正常加载过程、反射原理与class对象：</p> <p>Class对象的由来是将.class文件读入内存，并为之创建一个Class对象。<br /><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230211/a58986c2efbd9cbcc06217f2252bf388.jpg"></p> <p>&nbsp;三、反射的优缺点：<br /> 1、优点：在运行时获得类的各种内容，进行反编译，对于Java这种先编译再运行的语言，能够让我们很方便的创建灵活的代码，这些代码可以在运行时装配，无需在组件之间进行源代码的链接，更加容易实现面向对象。</p> <p>2、缺点：（1）反射会消耗一定的系统资源，因此，如果不需要动态地创建一个对象，那么就不需要用反射；</p> <p>（2）反射调用方法时可以忽略权限检查，因此可能会破坏封装性而导致安全问题。</p> <p>四、反射的用途：<br /> 1、反编译：.class--&gt;.java</p> <p>2、通过反射机制访问java对象的属性，方法，构造方法等</p> <p>3、当我们在使用IDE,比如Ecplise时，当我们输入一个对象或者类，并想调用他的属性和方法是，一按点号，编译器就会自动列出他的属性或者方法，这里就是用到反射。</p> <p>4、反射最重要的用途就是开发各种通用框架。比如很多框架（Spring）都是配置化的（比如通过XML文件配置Bean），为了保证框架的通用性，他们可能需要根据配置文件加载不同的类或者对象，调用不同的方法，这个时候就必须使用到反射了，运行时动态加载需要的加载的对象。</p> <p>5、例如，在使用Strut2框架的开发过程中，我们一般会在struts.xml里去配置Action，比如</p> <pre><code>&lt;action name="login" class="org.ScZyhSoft.test.action.SimpleLoginAction" method="execute"&gt;        &lt;result&gt;/shop/shop-index.jsp&lt;/result&gt;                &lt;result name="error"&gt;login.jsp&lt;/result&gt;        &lt;/action&gt;</code></pre> <p>&nbsp;比如我们请求login.action时，那么StrutsPrepareAndExecuteFilter就会去解析struts.xml文件，从action中查找出name为login的Action，并根据class属性创建SimpleLoginAction实例，并用Invoke方法来调用execute方法，这个过程离不开反射。配置文件与Action建立了一种映射关系，当View层发出请求时，请求会被StrutsPrepareAndExecuteFilter拦截，然后StrutsPrepareAndExecuteFilter会去动态地创建Action实例。</p> <p>比如，加载数据库驱动的，用到的也是反射。</p> <pre><code>Class.forName("com.mysql.jdbc.Driver"); // 动态加载mysql驱动</code></pre> <p>五、反射机制常用的类：<br /> Java.lang.Class;</p> <p>Java.lang.reflect.Constructor;</p> <p>Java.lang.reflect.Field;</p> <p>Java.lang.reflect.Method;</p> <p>Java.lang.reflect.Modifier;</p> <p>六、反射的基本使用：<br /> 1、获得Class：主要有三种方法：</p> <p>（1）Object--&gt;getClass</p> <p>（2）任何数据类型（包括基本的数据类型）都有一个“静态”的class属性</p> <p>（3）通过class类的静态方法：forName(String className)（最常用）</p> <pre><code>package fanshe;   public class Fanshe { 	public static void main(String[] args) { 		//第一种方式获取Class对象   		Student stu1 = new Student();//这一new 产生一个Student对象，一个Class对象。 		Class stuClass = stu1.getClass();//获取Class对象 		System.out.println(stuClass.getName()); 		 		//第二种方式获取Class对象 		Class stuClass2 = Student.class; 		System.out.println(stuClass == stuClass2);//判断第一种方式获取的Class对象和第二种方式获取的是否是同一个 		 		//第三种方式获取Class对象 		try { 			Class stuClass3 = Class.forName("fanshe.Student");//注意此字符串必须是真实路径，就是带包名的类路径，包名.类名 			System.out.println(stuClass3 == stuClass2);//判断三种方式是否获取的是同一个Class对象 		} catch (ClassNotFoundException e) { 			e.printStackTrace(); 		} 		 	} } </code></pre> <p>&nbsp;注意，在运行期间，一个类，只有一个Class对象产生，所以打印结果都是true；</p> <p>三种方式中，常用第三种，第一种对象都有了还要反射干什么，第二种需要导入类包，依赖太强，不导包就抛编译错误。一般都使用第三种，一个字符串可以传入也可以写在配置文件中等多种方法。</p> <p>2、判断是否为某个类的示例：</p> <p>一般的，我们使用instanceof 关键字来判断是否为某个类的实例。同时我们也可以借助反射中Class对象的isInstance()方法来判断时候为某个类的实例，他是一个native方法。</p> <pre><code>public native boolean isInstance(Object obj);</code></pre> <p><strong>3、创建实例：通过反射来生成对象主要有两种方法：</strong></p> <p>（1）使用Class对象的newInstance()方法来创建Class对象对应类的实例。</p> <pre><code>Class&lt;?&gt; c = String.class; Object str = c.newInstance();</code></pre> <p>（2）先通过Class对象获取指定的Constructor对象，再调用Constructor对象的newInstance()方法来创建对象，这种方法可以用指定的构造器构造类的实例。</p> <pre><code>//获取String的Class对象 Class&lt;?&gt; str = String.class; //通过Class对象获取指定的Constructor构造器对象 Constructor constructor=c.getConstructor(String.class); //根据构造器创建实例： Object obj = constructor.newInstance(“hello reflection”);</code></pre> <p>4、通过反射获取构造方法并使用：</p> <p>（1）批量获取的方法：<br /> public Constructor[] getConstructors()：所有"公有的"构造方法<br /> public Constructor[] getDeclaredConstructors()：获取所有的构造方法(包括私有、受保护、默认、公有)</p> <p>（2）单个获取的方法，并调用：<br /> public Constructor getConstructor(Class... parameterTypes):获取单个的"公有的"构造方法：<br /> public Constructor getDeclaredConstructor(Class... parameterTypes):获取"某个构造方法"可以是私有的，或受保护、默认、公有；</p> <p>（3） 调用构造方法：</p> <p>Constructor--&gt;newInstance(Object... initargs)</p> <p>newInstance是 Constructor类的方法（管理构造函数的类）</p> <p>api的解释为：newInstance(Object... initargs) ，使用此 Constructor 对象表示的构造方法来创建该构造方法的声明类的新实例，并用指定的初始化参数初始化该实例。</p> <p>它的返回值是T类型，所以newInstance是创建了一个构造方法的声明类的新实例对象，并为之调用。<br /> &nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-38028.htm">kubernetes实现分布式限流_云和虚拟化_</a></p>
                                        <p>下一个：<a href="/news/article-38540.htm">宠物美容师待遇如何（宠物美容师工资待遇）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">热门文章</h3>
                            </div>
                            <div class="panel-body">
                                <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                                    <li class="py-2"><a href="/free-nodes/2024-5-8-clash-v2ray-ss-ssr.htm" title="5月8日|最高速度22.5M/S，2024最新Shadowrocket/Clash/SSR/V2ray免费节点高速订阅链接">5月8日|最高速度22.5M/S，2024最新Shadowrocket/Clash/SSR/V2ray免费节点高速订阅链接</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
                <!-- Start of Footer Area -->
        <footer id="footer" class="footer-area footer-bg">
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            <div class="copy-right-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                NodeClashV2ray节点订阅站 版权所有 Powered by WordPress
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--End of Footer Area -->
    </div>
    <!-- Body main wrapper end -->
    <!-- Placed js at the end of the document so the pages load faster -->
    <!-- jquery latest version -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/vendor/jquery-1.12.0.min.js"></script>
    <!-- Bootstrap framework js -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/bootstrap.min.js"></script>
    <!-- Owl Carousel framework js -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/owl.carousel.min.js"></script>
    <!-- All js plugins included in this file. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/plugins.js"></script>
    <!-- Slick min.js. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/slick.min.js"></script>
    <!-- Waypoints.min.js. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/waypoints.min.js"></script>
    <!-- Main js file that contents all jQuery plugins activation. -->
    <script src="/assets/website/js/frontend/nodeclashv2ray/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>